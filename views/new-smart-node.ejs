<% layout('./layouts/main') -%>
  <article id="newSmartNodePage" class="content forms-page d-none" v-bind:class="{ 'd-block': !isLoading }">
    <div class="title-block">
      <h3 class="title"> New SmartNode </h3>
      <p class="title-description"> You can do it! </p>
    </div>
    <section class="section">
      <div class="row">
        <div class="col-md-6">
          <div class="card card-block sameheight-item">
            <p>This is still kinda dummied up. If you do not put in a valid address, it will break the whole system and you need to go into mlab and delete the new node</p>
            <form role="form" v-on:submit.prevent="onSubmit">
              <div class="form-group">
                <label class="control-label">Label</label>
                <input v-model="label" type="text" class="form-control underlined">
              </div>
              <div class="form-group">
                <label class="control-label">Address</label>
                <input v-model="address" class="form-control underlined">
              </div>
              <div class="form-group">
                <input type="submit" class="btn btn-primary">
              </div>
            </form>
          </div>
        </div>
      </div>
    </section>
  </article>

  <% block('javascript').append(`
  <script>
    (function() {

      nodar.api.on('authenticated', () => {

        // Before we run anything, ensure the user is
        // authenticated with the API, otherwise they
        // will be kicked to /login. This returns an
        // instance of the feathers client to talk to the
        // feathers api

        const component = new Vue({
          el: "#newSmartNodePage",
          data: {
            isLoading: false,
            label: '',
            address: ''
          },
          mounted: function() {
          },
          methods: {
            onSubmit: function(event) {
              const { label, address } = this;
              nodar.api.service('smart-nodes')
                .create({ label, address })
                .then(success => toastr.success('Node Created'))
                .catch(err => toastr.error(err.message))
            }
          }
        });

      });

    }());
  </script>
`) %>